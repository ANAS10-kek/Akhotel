@model PFM.Models.SetPasswordViewModel
@{
    ViewBag.Title = "Set Password";
    Layout = "~/Views/Shared/_LayoutManage.cshtml";
}

<div class="col-lg-9 px-0 mx-0 py-3">
    <div class="d-flex align-items-center m-0 pl-3">
        <span class="row align-items-center">
            <a href='@Url.Action("SecurityView")' class="btn btnback mr-3 px-3 py-0 font-weight-bold"><i class="fas fa-arrow-left"></i></a>
        </span>
        <h3 class="m-0 pl-1">General Account Settings</h3>
    </div>
    <hr />
    @if (ViewData["JavaScriptFunction"] == null)
    {

    }
    else if (ViewData["JavaScriptFunction"].ToString() == "successALert();")
    {
        <script>

            Swal.fire({
                position: 'center',
                icon: 'success',
                title: 'Your work has been saved',
                showConfirmButton: false,
                timer: 2200
            })
            window.location.href = "https://localhost:44333/Manage/Index"
        </script>
    }
    @using (Html.BeginForm("SetPassword", "Manage", FormMethod.Post, new { @class = "form-horizontal ", role = "form",@id= "SetPasswordForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="div-form col-lg-8 p-0 ">
            @Html.LabelFor(m => m.NewPassword, new { @class = "required labelinput" })
            <div class="wrap-input100 validate-input">
                <div class="inputgroup col-lg-12 w-100 p-0">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "passinput input100" })
                    <span class="input-group-append p-0">
                        <span class="icon-pass input-group-text px-4"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="div-form col-lg-8 p-0 ">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "required labelinput" })
            <div class="wrap-input100 validate-input">
                <div class="inputgroup col-lg-12 w-100 p-0">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "inputCon input100" })
                    <span class="input-group-append p-0">
                        <span class="icon-con input-group-text px-4"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="form-group col-lg-8 pt-5 px-0 m-0 pl-auto d-flex justify-content-end">
            <input type="submit" value="Set password" style="background-color:#DF6C4F;color:white" class="btn mr-3" />
            @Html.ActionLink("Cancel", "Index", "Manage", new { @class = "btn btn-secondary" })
        </div>
    }
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/MyScripts/DisplayPassword.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $('#SetPasswordForm').validate(
            {
                errorClass: 'help-block animation-slideDown text-danger',
                errorElement: 'span',
                errorPlacement: function (error, e) {
                    e.parents('.div-form ').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'NewPassword':
                    {
                        required: true,
                    },
                    'ConfirmPassword':
                    {
                        required: true,
                    }
                },
                messages: {
                    'NewPassword':
                    {
                        required: "New Password is Empty",
                    },
                    'ConfirmPassword':
                    {
                        required: "Confirmation Password is Empty"
                    }
                }
            });
    });
</script>