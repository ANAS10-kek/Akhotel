@model PFM.Models.ApplicationUser

@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Edit Username";
}
<style>
    .div-form input {
        color: #403866;
        font-size: 18px;
        display: block;
        width: 100%;
        background: transparent;
        height: 40px;
        padding: 0 10px 0 38px;
        outline: none;
        border: none;
    }

    .btnback {
        background-color: #9cd9ee !important;
        color: white;
        font-size: 1.5rem;
        justify-self: center;
        letter-spacing: 1px !important;
    }

    .adressSpan {
        font-size: small !important;
    }
</style>
<link href="~/Content/StylePageInscription.css" rel="stylesheet" />
<div class="mx-lg-5 mx-md-3 mx-sm-2 mt-5">
    <div class="col-lg-12 d-flex">
        @if (ViewData["JavaScriptFunction"] == null)
        {

        }
        else if (ViewData["JavaScriptFunction"].ToString() == "errorAlert();")
        {
            <script>
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Nothing change'
                });</script>
        }
        else if (ViewData["JavaScriptFunction"].ToString() == "successALert();")
        {
            <script>
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    title: 'Your work has been saved',
                    showConfirmButton: false,
                    timer: 1500
                })</script>
        }
        <div class="col-lg-3 border m-0 p-0 " style="        padding: 0px !important;
        background-color: #e8e7e3;">
            <ul class="list-group col-lg-12 p-0" style="height:500px !important;">
                <li class="list-group-item" style="background-color: #e8e7e3;"><span class="my-5" style="font-size:1.7rem">Mange Account</span></li>
               @Html.Partial("_MenuRightSide", new PFM.Models.ApplicationUser())
            </ul>
        </div>
        <div class="col-lg-9 container pt-1">
            <div class="d-flex align-content-center pt-3 m-0">
                <span>

                    <a href='@Url.Action("Index")' class="btn btnback mr-3 px-3 py-0 font-weight-bold"><i class="fas fa-arrow-left"></i></a>
                </span>
                <h2>General Account Settings</h2>
            </div>
            <hr />
            @using (Html.BeginForm("SetotherInfo", "Manage", FormMethod.Post, new { @class = "form-horizontal col-lgl-12 ml-lg-5 ml-md-3 ml-sm-1 ", role = "form", @id = "formRegister" }))
            {
                @Html.AntiForgeryToken()
                <span class="pb-4 mb-5 pt-3 px-0 col-lg-12">
                    @if (Model.City == null || Model.Country == null || Model.State == null || Model.Address == null)
                    {
                        <span class="font-weight-bold">
                            Add your <span style="color:#9cd9ee;">
                                Location
                            </span>:
                        </span>
                    }
                    else
                    {
                        <span class="d-flex " style="font-size:1.1rem">
                            Edit your
                            <span style="color:#9cd9ee; " class="px-1 font-weight-bold">Location</span>:
                            <span class="pl-2">
                                @if (ViewBag.CountryUser != null)
                                {
                                    foreach (var item in ViewBag.CountryUser)
                                    {
                                        @item.Text
                                    }
                                }
                            </span>,
                            <span>
                                @if (ViewBag.SateUser != null)
                                {
                                    foreach (var item in ViewBag.SateUser)
                                    {
                                        @item.Text
                                    }
                                }
                            </span>,
                            <span>
                                @if (ViewBag.CityUser != null)
                                {
                                    foreach (var item in ViewBag.CityUser)
                                    {
                                        @item.Text
                                    }
                                }
                            </span>.
                            <br />

                        </span>
                        <span class="px-2"><span class="font-weight-bold">Adress :</span> <span>@Html.DisplayFor(m => m.Address, new { @class = "adressSpan px-2" })</span></span>

                    }
                </span>
                <div class="div-form col-lg-10 m-0 p-0">
                    @Html.LabelFor(m => m.Address, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.Address, new { @class = "input100" })
                    </div>
                </div>
                <div class="row d-flex col-lg-10 m-0 p-0 justify-content-between">
                    <div class="div-form col-lg-5 m-0 p-0">
                        <label class="required labelinput" for="country">Country</label>
                        <div class="wrap-input100 validate-input">
                            @Html.DropDownListFor(m => m.Country, ViewBag.Countries as SelectList, "-- Select Country--", new { @class = "input100" })
                        </div>
                    </div>
                    <div class="div-form col-lg-5 m-0 p-0">
                        <label class="required labelinput" for="">State</label>
                        <div class="wrap-input100 validate-input">
                            @Html.DropDownListFor(m => m.State, new SelectList(string.Empty, "id", "name"), "-- Select state--", new { @class = " input100" })
                        </div>
                    </div>
                </div>
                <div class="div-form col-lg-10 m-0 p-0">
                    <label class="required labelinput" for="">City</label>
                    <div class="wrap-input100 validate-input">
                        @Html.DropDownListFor(m => m.City, new SelectList(string.Empty, "id", "name"), "---------- Select state ---------- ", new { @class = "input100 text-center" })
                    </div>
                </div>
                <div class="row col-lg-10 d-flex justify-content-end mx-0 mt-4 p-0">
                    <button class="btn text-light mr-3" style="background-color:#DF6C4F;" type="submit">Preview of change</button>
                    @Html.ActionLink("Cancel", "Index", "Manage", new { @class = "btn btn-secondary" })
                </div>
            }
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>
    $(document).ready(function () {
    $('#Country').change(function () {
        $("#State").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetStatesList")',
            dataType: 'json',
            data: jQuery.param({ Countries_id: $("#Country").val() }),

            success: function (states) {
                $.each(states, function (key, item) {
                    $("#State").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                });
            },
            error: function (ex) {
                alert("failed to retrieve states " + ex);
            }
        });
        return false;
    });
});
$(document).ready(function () {
    $('#State').change(function () {
        $("#City").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCitiesList")',
            dataType: 'json',
            data: jQuery.param({ State_id: $("#State").val() }),

            success: function (cities) {
                $.each(cities, function (key, item) {
                    $("#City").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                });
            },
            error: function (ex) {
                alert("failed to retrieve states " + ex);
            }
        });
        return false;
    });
});
</script>