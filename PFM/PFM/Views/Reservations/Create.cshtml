@model PFM.Models.ModelsReservation.Reservation

@{

    ViewBag.Title = "Create";
    PFM.Models.ApplicationDbContext db = new PFM.Models.ApplicationDbContext();
    int idc = int.Parse(Session["chamberId"].ToString());
    var room = db.Rooms.Find(idc);
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Reservations", FormMethod.Post, new { enctype = "multipart/form-data", @id = "formCreateReservation" }))
{
    @Html.AntiForgeryToken()


    <div class="d-flex">
        <div class="p-4 col-md-6">

            <div class="card text-center">
                <div class="card-header">
                    Fill the form
                </div>
                <div class="card-body">


                    <h4 class="card-title mb-4">Reservation</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row  mb-4">
                        <label class="col-md-4 text-left">Name </label>
                        <div class="col-md">
                            <input type="text" name="Name" class="form-control">
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="row  mb-4">
                        <label class="col-md-4 text-left">Number of rooms </label>
                        <div class="col-md">
                            <input type="number" name="NbChambres" class="form-control " />
                            @Html.ValidationMessageFor(model => model.NbChambres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row mb-4">
                        <label class="col-md-3 text-left">Date debut</label>
                        <div class="col-md">
                            <input type="text" name="DateDebut" class="form-control " id="myPicker" data-language="fr" data-position="right top" />
                            @Html.ValidationMessageFor(model => model.DateDebut, "", new { @class = "text-danger" })
                        </div>

                        <label class="col-md-3 text-left">Date Fin</label>
                        <div class="col-md">
                            <input type="text" name="DateFin" class="form-control " id="myPicker2" data-language="fr" data-position="right top" />
                            @Html.ValidationMessageFor(model => model.DateFin, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="form-group mb-3">
                        <label for="membership" class="mr-3">Number of People </label> <span id="nbp" class="text-warning mr-3 font-weight-bold">0</span><i class="fas fa-users "></i>
                        <input class="custom-range" id="NbPers" name="NbPers" min="1" max="@room.MaxNbPers" step="1" value="1" type="range">
                    </div>

                    <div class="row justify-content-end p-3">
                        <input type="submit" value="Confirm" class="btn btn-info btn-block" />
                    </div>


                </div>
                <div class="card-footer text-muted">
                    AK Hotel
                </div>


            </div>
        </div>

        <div class=" d-none d-md-block   p-4">
            <img src="~/pic/reservation-pic/RESERVATIONPIC.jpg" class="img-fluid rounded" />
            <span style="font-size:3.2rem !important;" class="display-4 font-weight-normal text-info text-justify">
                Best Offers , Best Quality
            </span>
        </div>

    </div>


}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    document.getElementById('NbPers').addEventListener("change", onChange, false);

    function onChange() {
        document.getElementById('nbp').innerText = document.getElementById('NbPers').value;

    }
</script>

<script>
    $(document).ready(function () {
        $('#formCreateReservation').validate(
            {
                errorClass: 'help-block animation-slideDown text-danger',
                errorElement: 'span',
                errorPlacement: function (error, e) {
                    e.parents('.div-form ').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'Name': {
                        required: true
                    },
                    'NbChambres':
                    {
                        required: true
                    }, 'DateDebut':
                    {
                        required: true
                    }, 'DateFin':
                    {
                        required: true
                    }, 'NbPers':
                    {
                        required: true
                    }
                }, messages: {
                    'Name': {
                        required: 'Name is required'
                    },
                    'NbChambres':
                    {
                        required: 'Numbre of rooms is required'
                    }, 'DateDebut':
                    {
                        required: 'Date Debut is required'
                    }, 'DateFin':
                    {
                        required: 'Date check out is required'
                    }, 'NbPers':
                    {
                        required: 'Number of persons is required'
                    }
                }
            });
    });
</script>

