@model PFM.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/StylePageInscription.css" rel="stylesheet" />
<section class="sec-main row d-flex col-lg-12 m-0 p-0">
    <div class="sec-showcase-offers col-lg-4 p-0 m-0">
        <div class="showcase-offers d-flex col-lg-12 justify-content-center  align-items-center text-center">
            <div class=" text-light">
                <h1 class="display-4 text-light px-2 font-weight-bolder">Register Now ! </h1>
                <span class="d-inline font-weight-bold" style="font-size:4rem;color: #9cd9ee; font-family: 'Long Cang', cursive;">&</span>
                <h1 class="font-weight-bold">Stay Connected </h1>
                <br>
                <span class="text-light">
                    <i class="fa fa-home" aria-hidden="true"></i><a class="text-light" href="index.html">Home</a>
                </span>
            </div>
        </div>
    </div>
    <div class="signup-form col-lg-8 m-0 pt-2 p-0">

        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "row form-horizontal col-lg-12 pt-5 m-0 form-horizontal login100-form validate-form flex-sb flex-w", role = "form", @id = "formRegister" }))
        {
            @Html.AntiForgeryToken()
            <div class="col-lg-6">
                <div class="div-form col-lg-12 p-0 ">
                    @Html.LabelFor(m => m.UserName, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "input100" })
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0 ">
                    @Html.LabelFor(m => m.Email, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.Email, new { @class = "input100" })
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0 ">
                    @Html.LabelFor(m => m.Password, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        <div class="inputgroup col-lg-12 w-100 p-0">
                            @Html.PasswordFor(m => m.Password, new { @class = "passinput input100" })
                            <span class="input-group-append p-0">
                                <span class="icon-pass input-group-text px-4"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        <div class="inputgroup col-lg-12 p-0">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "inputCon input100" })
                            <span class="input-group-append p-0">
                                <span class="icon-con input-group-text px-4"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "col-lg-12 input100" })
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0 ">
                    @Html.LabelFor(m => m.Address, new { @class = "required labelinput" })
                    <div class="wrap-input100 validate-input">
                        @Html.TextBoxFor(m => m.Address, new { @class = "col-lg-12 input100" })
                    </div>
                </div>
            </div>
            <div class="col-lg-6" style="height:max-content;">
                <div class="row d-flex col-lg-12 m-0 p-0 justify-content-between">
                    <div class="div-form col-lg-6 p-0">
                        <label class="required labelinput" for="country">Country</label>
                        <div class="wrap-input100 validate-input">
                            @Html.DropDownListFor(m => m.Country,ViewBag.Countries as SelectList, "-- Select Country--", new { @class = "col-lg-12 input100 p-0" })
                        </div>
                    </div>
                    <div class="div-form col-lg-6 px-1">
                        <label class="required labelinput" for="">State</label>
                        <div class="wrap-input100 validate-input">
                            @Html.DropDownListFor(m => m.State, new SelectList(string.Empty, "id", "name"), "-- Select state--", new { @class = "col-lg-12 input100 p-0" })
                        </div>
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0">
                    <label class="required labelinput" for="">City</label>
                    <div class="wrap-input100 validate-input">
                        @Html.DropDownListFor(m => m.City, new SelectList(string.Empty, "id", "name"), "-- Select state--", new { @class = "col-lg-12 input100 p-0" })
                    </div>
                </div>
                <div class="div-form col-lg-12 p-0">
                    <label></label>
                    <button class="btn font-weight-bold col-lg- d-flex justify-content-center align-items-center w-100" style="background-color:#DF6C4F;height:43px;color:white;font-size:1.3rem;" type="submit"><span>Register</span></button>
                </div>
                <div id="div-or"><span id="sp1"></span> <span id="sp2">OR</span><span id="sp3"> </span></div>
            </div>

        }
        <div class="col-lg-6 ml-auto external-login-section">
            <div class="div-form col-lg-12 ">
                @Html.Partial("_ExternalLoginsListPartial", new PFM.Models.ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
            </div>
            <diV class="div-form col-lg-11 py-4">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
             
            </diV>
        </div>
    </div>
</section>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/MyScripts/DisplayPassword.js"></script>
<script>
        $(document).ready(function () {
            $('#formRegister').validate(
                {
                    errorClass: 'help-block animation-slideDown text-danger',
                    errorElement: 'span',
                    errorPlacement: function (error, e) {
                        e.parents('.div-form ').append(error);
                    },
                    highlight: function (e) {

                        $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                        $(e).closest('.help-block').remove();
                    },
                    success: function (e) {
                        e.closest('.form-group').removeClass('has-success has-error');
                        e.closest('.help-block').remove();
                    },
                    rules: {
                        'UserName': {
                            required: true
                        },
                        'Email': {
                            required: true,
                            email: true
                        },
                        'Password': {
                            required: true,
                            minlength: 6
                        },
                        'ConfirmPassword': {
                            required: true,
                            equalTo: "#Password"
                        },
                        'PhoneNumber': {
                            required: true
                        },
                        'Address': {
                            required: true
                        },
                        'Country': {
                            required: true
                        },
                        'State': {
                            required: true
                        },
                        'City': {
                            required: true
                        },
                    },
                    messages: {
                        'UserName': {
                            required: "UserName is required"
                        },
                        'Email': {
                            required: "Email is required",
                            email: "Enter a Valid email(example@xyz.az)"
                        },
                        'Password': {
                            required: "Password is required",
                            minlength: "min lenght is 6 caractere"
                        },
                        'ConfirmPassword': {
                            required: "Confirm Password is required",
                            equalTo: "Password and Confirmation Password not much"
                        },
                        'PhoneNumber': {
                            required: "Phone Number is required"
                        },
                        'Address': {
                            required: "Address is required"
                        },
                        'Country': {
                            required: "Country is required"
                        },
                        'State': {
                            required: "State is required"
                        },
                        'City': {
                            required: "City is required"
                        }
                    }
                });
        });
    </script>
<script>
    $(document).ready(function () {
    $('#Country').change(function () {
        $("#State").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetStatesList")',
            dataType: 'json',
            data: jQuery.param({ Countries_id: $("#Country").val() }),

            success: function (states) {
                $.each(states, function (key, item) {
                    $("#State").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                });
            },
            error: function (ex) {
                alert("failed to retrieve states " + ex);
            }
        });
        return false;
    });
});
$(document).ready(function () {
    $('#State').change(function () {
        $("#City").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetCitiesList")',
            dataType: 'json',
            data: jQuery.param({ State_id: $("#State").val() }),

            success: function (cities) {
                $.each(cities, function (key, item) {
                    $("#City").append('<option value="' + item.Value + '">' + item.Text + '</option>');
                });
            },
            error: function (ex) {
                alert("failed to retrieve states " + ex);
            }
        });
        return false;
    });
});
</script>

