@model PFM.Models.ModelsReservation.Room

@{
    ViewBag.Title = "New room";
    Layout = "~/Views/Shared/_administrationLayout.cshtml";
}
<style>
    .labelinput {
        display: block;
        font-weight: bold;
        text-transform: uppercase;
        margin-bottom: 7px;
    }

    .avatar-pic {
        width: 150px;
    }

    img {
        position: relative;
        width: 150px;
    }

    .divInput {
        position: relative;
    }

    #fileInput {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        padding: 0;
        margin: 0;
        cursor: pointer;
        filter: alpha(opacity=0);
        opacity: 0;
        background-color: #59698d !important;
    }
    .labelinput::after {
        content: '*';
        margin-left: 2px;
        color: #b90000;
    }
</style>
<div class="card mb-4">
    <div style="font-size: 1.3rem; vertical-align: middle" class="card-header font-weight-bold d-flex justify-content-between align-items-center"><i class="fas fa-plus-square px-2 py-0"></i><span> Create new  room</span>    <a class="btn btn-outline-danger  ml-auto" href='@Url.Action("roomList")'><i class="fas fa-arrow-circle-left"></i></a></div>
    @using (Html.BeginForm("CreateRoom", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @id = "formCreate" }))
    {
        @Html.AntiForgeryToken()

        <div class="card-body">
            <div class="col-lg-12 mx-0 mt-1 py-0 px-1 d-flex">
                <div class="col-lg-6 m-0 p-0">
                    <fieldset class="border rounded p-2 bg-light ">
                        <legend class="w-auto px-2 bg-light border rounded">Details room :</legend>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Title</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.Titre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Price</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.Prix, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Prix, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Type of bed </label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.TypeDeLit, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TypeDeLit, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Avaibility</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.Disponibilité, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Disponibilité, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Count of rooms</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.NbChambres, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NbChambres, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 pb-2 div-form">
                            <label class="labelinput">Short Description</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.EditorFor(m => m.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-lg-12 pb-2 div-form ">
                            <label class="labelinput">Long Description</label>
                            <div class="col-lg-12 m-0 p-0">
                                @Html.TextAreaFor(m => m.LongDescription, 5, 10, new { @class = "form-control col-lg-12 multi-line" })    
                                @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-lg-6 d-flex flex-column">
                    <div class="divInput mb-2 div-form ">
                        <fieldset class="border rounded p-2 bg-light ">
                            <legend class="w-auto px-2 bg-light border rounded">Images room :</legend>
                            <div>
                                <div class="file-field">
                                    <div class="mb-4 d-flex justify-content-center">
                                        <i class="fa fa-8x fa-download" aria-hidden="true"></i>
                                    </div>
                                    <div class="d-flex justify-content-center">
                                        <div class="btn btn-mdb-color btn-rounded float-left">
                                            <span class="lead">Click to add images room</span>
                                            <input type="file" id="fileInput" name="files" multiple />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div>
                        <fieldset class="border rounded p-2 bg-light ">
                            <legend class="w-auto px-2 bg-light border rounded">Images Selected :</legend>
                            <div id="placeImages" class="placeImages d-flex col-lg-12 flex-wrap ">
                               
                            </div>
                        </fieldset>

                    </div>
                </div>
            </div>

        </div>
        <div class="col-lg-12 text-lg-right py-2 d-flex justify-content-end">
            <button type="submit" class="btn btn-success px-5"><i class="far fa-save"></i> Save</button>
        </div>
    }
</div>


<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $('#formCreate').validate(
            {
                errorClass: 'help-block animation-slideDown text-danger',
                errorElement: 'span',
                errorPlacement: function (error, e) {
                    e.parents('.div-form ').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'Titre': {
                        required: true
                    },
                    'Prix':
                    {
                        required: true
                    }, 'TypeDeLit':
                    {
                        required: true
                    }, 'NbChambres':
                    {
                        required: true
                    }, 'LongDescription':
                    {
                        required: true
                    }, 'files':
                    {
                        required: true
                    }, 'Disponibilité':
                    {
                        required: true
                    }, 'ShortDescription':
                    {
                        required: true
                    }
                }, messages: {
                    'Titre': {
                        required: 'Tilte is required'
                    },
                    'Prix':
                    {
                        required: 'Price is required'
                    }, 'TypeDeLit':
                    {
                        required: 'Type of bed is required'
                    }, 'NbChambres':
                    {
                        required: 'Number of room is required'
                    }, 'LongDescription':
                    {
                        required: 'Long Description is required'
                    }, 'files':
                    {
                        required: 'Images is required'
                    }, 'Disponibilité':
                    {
                        required: 'Availability is required'
                    }, 'ShortDescription':
                    {
                        required: 'Short Description is required'
                    }
                }
            });
    });
</script>
